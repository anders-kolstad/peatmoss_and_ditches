[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analysing the effect of bog ditches on Sphagnum communities",
    "section": "",
    "text": "1 Introduction\nThis web page documents the analysis for for a paper by Marte Fandrem on the effects of hydrological disturbance on the growth of Sphagnum mosses on a Norwegian bog.\nThe bog is a relatively large ombrotrophic bog previously used for peat extraction, and also drained and used for forest plantations.\nSphagnum growth was measured using the cranked wire technique on permanent vegetation quadrats (n = 28) from 2017 to 2022 (5 growing seasons). Each vegetation quadrat has 16 points (i.e. pins) and each pin was measured up to 4 times on each sampling occasion (on each side and by different people). The first 18 vegetation plots were initiated in 2017 and are paired with water table well that log the water table depth. These vegetation plots are situated in homogeneous vegetation types (bog lawns), but with varying distance to disturbances (extraction sites and ditches). The quadrats numbered 18-28 were initiated in 2021 and a placed relatively for from the hydrological disturbances, but in varying communities (hollows and hummoks).\n\n\nLoad packages\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tmap)\n\n\n\n\nImport data\npath    &lt;- \"data/shapeFiles/\"\nditches &lt;- sf::read_sf(paste0(path, \"ditches/grofter.shp\"))\nmassifs  &lt;- sf::read_sf(paste0(path, \"massifs/hostadmyra_myrmassiv.shp\")) \n\n#extrSites &lt;- sf::read_sf(paste0(path, \"peatExtractionSites/Torvtak.shp\"))\n# This data is the same as the masifs.\n\nquadrats &lt;- sf::read_sf(paste0(path, \"vegetationQuadrats1/veipunkter_vannbronner_ruter_2017.shp\")) |&gt;\n  bind_rows(sf::read_sf(paste0(path, \"vegetationQuadrats2/vegetasjonsruter_19-30.shp\")))\n\n\n\n\nCreate map\ntm_shape(massifs) +\n  tm_polygons(col = \"Name\",\n              palette = c(\"grey60\", \"grey70\", \"grey80\"),\n              legend.show=F) +\n  tm_shape(ditches |&gt;\n             mutate(\"Ditch age\" = case_when(\n               Name == \"Eldre\" ~ \"Old\",\n               Name == \"Nyere\" ~ \"More recent\",\n               .default = \"Old\"\n             ))) +\n  tm_lines(col = \"Ditch age\",\n           lwd=2,\n           palette = c(\"red\", \"orange\")) +\n  #tm_shape(extrSites) +\n  #tm_polygons()\n  tm_shape(quadrats) +\n  tm_dots(size = 2,\n          shape=21,\n          col = \"green\",\n          alpha = 0.5)  +\n  tm_scale_bar(position = c(\"left\", \"bottom\")) +\n  tm_compass()\n\n\n\n\n\nMap of study area. Green circles are permanent vegetation quadrats. The shades of grey indicator different bog massifs.\n\n\n\n\n\nThe shape file with the position of vegetation qadrats do not contain the qadrat ID for all cases. We need to add that.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "ch_data_exploration.html",
    "href": "ch_data_exploration.html",
    "title": "2  Data exploration and cleaning",
    "section": "",
    "text": "2.1 Import and compile data\nThe data set is located on GitHub i na xlsx format. The data are split into different tabs based on year.\nImport data set\ndat &lt;- read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2017\") |&gt;\n  # rm some measurements from October. These were measured again in November \n  # along with the rest of the quadrats.\n  select(-DateFALL2,\n         -HeightFALL2,\n         -ObserverFALL2) |&gt;\n  bind_rows(\n    read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2018\") |&gt;\n  mutate(DateFALL = as.Date(DateFALL, \"%d.%m.%Y\"))) |&gt;\n  bind_rows(\n    read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2019\") |&gt;\n    mutate(\n      DateSUMMER = as.Date(DateSUMMER, \"%d/%m/%Y\"),\n      DateFALL = as.Date(DateFALL, \"%d/%m/%y\"))\n  ) |&gt;\n  bind_rows(\n    read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2020\") |&gt;\n    mutate(DateSPRING = as.Date(DateSPRING, \"%d/%m/%Y\"))\n  ) |&gt;\n  bind_rows(\n    read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2021\") |&gt;\n      # data had explicit NAs in cells that were read as text:\n    mutate(across(starts_with(\"Height\"), as.numeric))\n  ) |&gt;\n  bind_rows(\n    read_excel(\"data/growthData.xlsx\", \n    sheet = \"y2022\") |&gt;\n    mutate(across(starts_with(\"Height\"), as.numeric),\n           Plot_no = as.numeric(Plot_no),\n           Pin_no = as.numeric(Pin_no))\n  )\nHere’s what the data looks like after I just row bind them:\nCode\nDT::datatable(dat)\nI need to make this into a long format. There are multiple date and height columns that I want to combine. I will split the spring and fall data (ignoring the summer data) into separate sets, and then combine them again later.\nTurn into long format\n# Spring data\ndat_spring &lt;- dat |&gt;\n  select(-contains(c(\"FALL\", \"SUMMER\", \"diff\"))) |&gt;\n  pivot_longer(cols = contains(\"Height\"),\n               values_to = \"Height_cm\",\n               values_drop_na = T) |&gt;\n  separate_wider_delim(name, \n                       delim = \"_\",\n                       names = c(\"temp\", \"pinPosition\"),\n                       too_few = \"align_start\") |&gt;\n  filter(str_detect(temp, \"Rejected\", negate = T)) |&gt;\n  mutate(pinPosition = case_when(\n    is.na(pinPosition) ~ \"single\",\n    .default = pinPosition\n  )) |&gt;\n  select(-temp) |&gt;\n  add_column(season = \"spring\") |&gt;\n  rename(date = DateSPRING)\n\n#names(dat) [!names(dat) %in% names(dat_spring) ]\n#unique(dat_spring$pinPosition)\n\n\ndat_fall &lt;- dat |&gt;\n  select(-contains(c(\"SPRING\", \"SUMMER\", \"diff\"))) |&gt;\n  # introduces NA, where NA was originally as text\n  mutate(across(starts_with(\"Height\"), as.numeric)) |&gt;\n  pivot_longer(cols = contains(\"Height\"),\n               values_to = \"Height_cm\",\n               values_drop_na = T) |&gt;\n  separate_wider_delim(name, \n                       delim = \"_\",\n                       names = c(\"temp\", \"pinPosition\"),\n                       too_few = \"align_start\") |&gt;\n  filter(str_detect(temp, \"Rejected\", negate = T)) |&gt;\n  mutate(pinPosition = case_when(\n    is.na(pinPosition) ~ \"single\",\n    .default = pinPosition\n  )) |&gt;\n  select(-temp) |&gt;\n  add_column(season = \"fall\") |&gt;\n  rename(date = DateFALL)\n\n# A check looking into the warnings introduced when turning\n# Hieght columns from characters to numeric. All fine.\n# ch &lt;- dat |&gt;\n#   select(-contains(c(\"SPRING\", \"SUMMER\", \"diff\"))) |&gt;\n#   drop_na(HeightFALL) |&gt;\n#   unite(\"link\", c(ID, DateFALL))\n# num &lt;- dat |&gt;\n#   select(-contains(c(\"SPRING\", \"SUMMER\", \"diff\"))) |&gt;\n#   mutate(across(starts_with(\"Height\"), as.numeric)) |&gt;\n#   drop_na(HeightFALL) |&gt;\n#   unite(\"link\", c(ID, DateFALL))\n# ch |&gt;\n#   filter(!link %in% num$link) |&gt;\n#   View()\n  \n\n# Combining the two\ndat_long &lt;- dat_spring |&gt;\n  bind_rows(dat_fall) |&gt;\n  # merge comments and note columns\n  unite(\"Remarks\", \n        contains(c(\"Comment\", \"Notes\")), \n        sep = \". \",\n        na.rm=TRUE) |&gt;\n  # merge observer columns\n  unite(\"Observer\",\n        contains(\"Observer\"),\n        sep = \". \",\n        na.rm = TRUE)\nThe long data is 14641 rows. This is too much to display as an html table on this web site, but here is a random sample of 100 rows just to illustrate.\nCode\nDT::datatable(dat_long[sample(1:nrow(dat_long), 100),])\nI still need to figure out what to do about that second measurement on some pins in the fall of 2017.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data exploration and cleaning</span>"
    ]
  },
  {
    "objectID": "ch_data_exploration.html#looking-for-data-problems",
    "href": "ch_data_exploration.html#looking-for-data-problems",
    "title": "2  Data exploration and cleaning",
    "section": "2.2 Looking for data problems",
    "text": "2.2 Looking for data problems\n\n2.2.1 Dates\n\n2.2.1.1 Seasons\nAre the dates entered correctly to match the seasons?\n\n\nCode\ndat_long |&gt;\n  ggplot() +\n  geom_bar(aes(x = month(date)))+\n  facet_grid(year(date)~season)\n\n\n\n\n\n\n\n\nFigure 2.1: Distribution of measurement dates (months).\n\n\n\n\n\nThere are some measurement sin 2020 that are wrong. It turns out the month and day have been switched for plots 8 and 9:\n\n\nCode\ndat_long |&gt;\n  mutate(year = year(date)) |&gt;\n  filter(year == 2020,\n         season == \"fall\") |&gt;\n  ggplot() +\n  geom_bar(aes(x = date),\n           color = \"yellow\",\n           fill = \"orange\")+\n  theme(axis.text.y = element_blank()) +\n  facet_grid(Plot_no~.)\n\n\n\n\n\n\n\n\nFigure 2.2: Checking inconsistency in date entries.\n\n\n\n\n\n\n\nConfirming tht day and month have been switched.\ndat_long |&gt;\n  filter(Plot_no %in% c(8, 9),\n         season == \"fall\",\n         year(date) == 2020) |&gt;\n  View()\n\n\nI will reverse these now.\n\n\nFix date mistake\ndat_long &lt;- dat_long |&gt;\n  mutate(date = case_when(\n    Plot_no %in% c(8,9) & date == date(\"2020-06-10\") ~ date(\"2020-10-06\"),\n    .default = date\n  ))\n\n\n\n\nCode\ndat_long |&gt;\n  mutate(year = year(date)) |&gt;\n  filter(year == 2020,\n         season == \"fall\") |&gt;\n  ggplot() +\n  geom_bar(aes(x = date),\n           color = \"yellow\",\n           fill = \"orange\")+\n  theme(axis.text.y = element_blank()) +\n  facet_grid(Plot_no~.)\n\n\n\n\n\n\n\n\nFigure 2.3: Checking measurement dates after fixing mistake.\n\n\n\n\n\n\n\n2.2.1.2 Year\n\n\nCode\ndat_long |&gt;\n  ggplot() +\n  geom_bar(aes(\n    x = factor(year(date)),\n    fill = season)) +\n  labs(x = \"Year\")\n\n\n\n\n\n\n\n\nFigure 2.4: Distribution of data points over the years and seasons\n\n\n\n\n\nI wonder why there are so relatively few observation in 2020.\n\n\n\n2.2.2 Height variable\nA closer look at the height variable.\nHere’s the time series for a single pin, measured from the west.\n\n\nCode\ndat_long |&gt;\n  filter(grepl(\"^8.14\", ID),\n         pinPosition == \"W2\") |&gt;\n  mutate(\n    year = year(date),\n    month = month(date),\n    day = day(date)) |&gt;\n  arrange(year, month, day) |&gt;\n  select(-Plot_no,\n         -Pin_no,\n         -Treatment,\n         -Species_W,\n         -Species_E,\n         -date) |&gt;\n  datatable()\n\n\n\n\n\n\nIt appears the pin was replaced in the first fall in 2019. In 2020 there is no data from the spring, and in the fall the ID is back to the original (the new part is removed). Next spring (2021) the wire seems to have been replaced again. In the spring of 2022 it was replaced a forth(?) time, but the ID is again back to the original code.\nHow do we make sense of this?\n\n\n2.2.3 Treatment\nA closer look at the Treatment variable.\n\n\nCode\ndat_long |&gt;\n  count(Treatment)\n\n\n# A tibble: 10 × 2\n   Treatment     n\n   &lt;chr&gt;     &lt;int&gt;\n 1 EDGE        492\n 2 HOLLOW     1642\n 3 HUMMOCK     762\n 4 K          1888\n 5 M          2046\n 6 R1         1941\n 7 R2         1917\n 8 T1         1923\n 9 T2         1958\n10 &lt;NA&gt;         72\n\n\nHow can Treatment be NA?\n\n\nCode\ndat_long |&gt;\n  filter(is.na(Treatment)) |&gt;\n  datatable()\n\n\n\n\n\n\nThese are all new pins, and all from the fall. These row also don’t have Pin_no and Plot_no. Year is 2018 or 2019. I can assume that the Treatment of the new pins are the same as the original pins (same Plot_no but without the new suffix).\nI need to make a table with original IDs matched with the correct plot and pin number, and the correct treatment.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data exploration and cleaning</span>"
    ]
  },
  {
    "objectID": "ch_causal_model.html",
    "href": "ch_causal_model.html",
    "title": "3  Causal model",
    "section": "",
    "text": "flowchart LR\n    A[Distance to ditch]--&gt;B\n    B--&gt;C\n    B--&gt;D\n    C--&gt;D\n    click A callback \"Tooltip for a callback\"\n    click B \"https://www.github.com\" \"This is a tooltip for a link\"\n    click C call callback() \"Tooltip for a callback\"\n    click D href \"https://www.github.com\" \"This is a tooltip for a link\"",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Causal model</span>"
    ]
  },
  {
    "objectID": "appendix-notes.html",
    "href": "appendix-notes.html",
    "title": "Appendix A — Additional Notes",
    "section": "",
    "text": "Sample appendix",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Additional Notes</span>"
    ]
  }
]